/*
 * This file was generated by dbusxml2cpp version 0.6
 * Command line was: dbusxml2cpp -i QtTelepathy/Core/ConnectionInterfacePrivacyAdaptor -a :src/Core/connectioninterfaceprivacyadaptor.cpp xml/tp-conn-iface-privacy.xml
 *
 * dbusxml2cpp is Copyright (C) 2006 Trolltech ASA. All rights reserved.
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#include "connectioninterfaceprivacyadaptor.h"
#include <QtCore/QMetaObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>

/*
 * Implementation of adaptor class PrivacyAdaptor
 */

PrivacyAdaptor::PrivacyAdaptor(QObject *parent)
    : QDBusAbstractAdaptor(parent)
{
    // constructor
    setAutoRelaySignals(true);
}

PrivacyAdaptor::~PrivacyAdaptor()
{
    // destructor
}

QString PrivacyAdaptor::GetPrivacyMode()
{
    // handle method call org.freedesktop.Telepathy.Connection.Interface.Privacy.GetPrivacyMode
    QString out0;
    QMetaObject::invokeMethod(parent(), "GetPrivacyMode", Q_RETURN_ARG(QString, out0));
    return out0;
}

QStringList PrivacyAdaptor::GetPrivacyModes()
{
    // handle method call org.freedesktop.Telepathy.Connection.Interface.Privacy.GetPrivacyModes
    QStringList out0;
    QMetaObject::invokeMethod(parent(), "GetPrivacyModes", Q_RETURN_ARG(QStringList, out0));
    return out0;
}

void PrivacyAdaptor::SetPrivacyMode(const QString &mode)
{
    // handle method call org.freedesktop.Telepathy.Connection.Interface.Privacy.SetPrivacyMode
    QMetaObject::invokeMethod(parent(), "SetPrivacyMode", Q_ARG(QString, mode));
}
