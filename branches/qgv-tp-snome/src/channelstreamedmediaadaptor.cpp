/*
 * This file was generated by dbusxml2cpp version 0.6
 * Command line was: dbusxml2cpp -i QtTelepathy/Core/ChannelStreamedMediaAdaptor -i QtTelepathy/Common/ChannelStreamedMediaTypes -a :src/Core/channelstreamedmediaadaptor.cpp xml/tp-chan-type-streamed-media.xml
 *
 * dbusxml2cpp is Copyright (C) 2006 Trolltech ASA. All rights reserved.
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#include "channelstreamedmediaadaptor.h"
#include "channelstreamedmediatypes.h"
#include <QtCore/QMetaObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>

/*
 * Implementation of adaptor class StreamedMediaAdaptor
 */

StreamedMediaAdaptor::StreamedMediaAdaptor(QObject *parent)
    : QDBusAbstractAdaptor(parent)
{
    // constructor
    setAutoRelaySignals(true);
}

StreamedMediaAdaptor::~StreamedMediaAdaptor()
{
    // destructor
}

org::freedesktop::Telepathy::StreamInfoList StreamedMediaAdaptor::ListStreams()
{
    // handle method call org.freedesktop.Telepathy.Channel.Type.StreamedMedia.ListStreams
    org::freedesktop::Telepathy::StreamInfoList out0;
    QMetaObject::invokeMethod(parent(), "ListStreams", Q_RETURN_ARG(org::freedesktop::Telepathy::StreamInfoList, out0));
    return out0;
}

void StreamedMediaAdaptor::RemoveStreams(org::freedesktop::Telepathy::StreamTypeList streams)
{
    // handle method call org.freedesktop.Telepathy.Channel.Type.StreamedMedia.RemoveStreams
    QMetaObject::invokeMethod(parent(), "RemoveStreams", Q_ARG(org::freedesktop::Telepathy::StreamTypeList, streams));
}

void StreamedMediaAdaptor::RequestStreamDirection(uint stream_id, uint stream_direction)
{
    // handle method call org.freedesktop.Telepathy.Channel.Type.StreamedMedia.RequestStreamDirection
    QMetaObject::invokeMethod(parent(), "RequestStreamDirection", Q_ARG(uint, stream_id), Q_ARG(uint, stream_direction));
}

org::freedesktop::Telepathy::StreamInfoList StreamedMediaAdaptor::RequestStreams(uint contact_handle, org::freedesktop::Telepathy::StreamTypeList types)
{
    // handle method call org.freedesktop.Telepathy.Channel.Type.StreamedMedia.RequestStreams
    org::freedesktop::Telepathy::StreamInfoList out0;
    QMetaObject::invokeMethod(parent(), "RequestStreams", Q_RETURN_ARG(org::freedesktop::Telepathy::StreamInfoList, out0), Q_ARG(uint, contact_handle), Q_ARG(org::freedesktop::Telepathy::StreamTypeList, types));
    return out0;
}

